%TEST_CLEAN_VARARGIN

%% Test 1: Empty
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
    handles = {'h1', 'h2', 'h3'};
    varargin = {};
    assert(isequal(clean_varargin(handles, varargin), varargin), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case empty.')
    assert(isequal(clean_varargin(handles, varargin{:}), varargin), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case empty.')
end

%% Test 2: Already clean
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
    handles = {'h1', 'h2', 'h3'};
    varargin = {'h1', 1, 'h2', 2, 'h3', 3};
    assert(isequal(clean_varargin(handles, varargin), varargin), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case already clean.')
    assert(isequal(clean_varargin(handles, varargin{:}), varargin), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case already clean.')
end

%% Test 3: Some cleaning
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
    handles = {'h1', 'h2', 'h3'};
    varargin = {'e1', -1, 'h1', 1, 'e2', -2, 'h2', 2, 'e3', -3, 'h3', 3, 'e4', -4};
    assert(isequal(clean_varargin(handles, varargin), {'h1', 1, 'h2', 2, 'h3', 3}), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case needing cleaning.')
    assert(isequal(clean_varargin(handles, varargin{:}), {'h1', 1, 'h2', 2, 'h3', 3}), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case needing cleaning.')
end

%% Test 4: Complete cleaning
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
    handles = {'h1', 'h2', 'h3'};
    varargin = {'e1', -1, 'e2', -2, 'e3', -3, 'e4', -4};
    assert(isempty(clean_varargin(handles, varargin{:})), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case needing complete cleaning.')
    assert(isempty(clean_varargin(handles, varargin)), ...
        [BRAPH2.STR ':clean_varargin:' BRAPH2.FAIL_TEST], ...
        'Not working case needing complete cleaning.')
end